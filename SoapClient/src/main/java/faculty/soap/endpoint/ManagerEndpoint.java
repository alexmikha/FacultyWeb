
package faculty.soap.endpoint;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ManagerEndpoint", targetNamespace = "http://endpoint.soap.faculty/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ManagerEndpoint {


    /**
     * 
     * @param arg0
     * @return
     *     returns faculty.soap.endpoint.StudentDTO
     * @throws NotFoundIdException_Exception
     * @throws NotFoundObjectException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://endpoint.soap.faculty/ManagerEndpoint/findStudentByIdRequest", output = "http://endpoint.soap.faculty/ManagerEndpoint/findStudentByIdResponse", fault = {
        @FaultAction(className = NotFoundIdException_Exception.class, value = "http://endpoint.soap.faculty/ManagerEndpoint/findStudentById/Fault/NotFoundIdException"),
        @FaultAction(className = NotFoundObjectException_Exception.class, value = "http://endpoint.soap.faculty/ManagerEndpoint/findStudentById/Fault/NotFoundObjectException")
    })
    public StudentDTO findStudentById(
        @WebParam(name = "arg0", partName = "arg0")
        int arg0)
        throws NotFoundIdException_Exception, NotFoundObjectException_Exception
    ;

    /**
     * 
     * @return
     *     returns faculty.soap.endpoint.StudentDTO
     * @throws NotFoundIdException_Exception
     * @throws NotFoundObjectException_Exception
     */
    @WebMethod(operationName = "GetAllStudent")
    @WebResult(partName = "return")
    @Action(input = "http://endpoint.soap.faculty/ManagerEndpoint/GetAllStudentRequest", output = "http://endpoint.soap.faculty/ManagerEndpoint/GetAllStudentResponse", fault = {
        @FaultAction(className = NotFoundObjectException_Exception.class, value = "http://endpoint.soap.faculty/ManagerEndpoint/GetAllStudent/Fault/NotFoundObjectException"),
        @FaultAction(className = NotFoundIdException_Exception.class, value = "http://endpoint.soap.faculty/ManagerEndpoint/GetAllStudent/Fault/NotFoundIdException")
    })
    public StudentDTO getAllStudent()
        throws NotFoundIdException_Exception, NotFoundObjectException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns faculty.soap.endpoint.StudentDTO
     * @throws NotFoundObjectException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://endpoint.soap.faculty/ManagerEndpoint/loginStudentRequest", output = "http://endpoint.soap.faculty/ManagerEndpoint/loginStudentResponse", fault = {
        @FaultAction(className = NotFoundObjectException_Exception.class, value = "http://endpoint.soap.faculty/ManagerEndpoint/loginStudent/Fault/NotFoundObjectException")
    })
    public StudentDTO loginStudent(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NotFoundObjectException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns faculty.soap.endpoint.StudentDTO
     * @throws RegisterException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://endpoint.soap.faculty/ManagerEndpoint/createStudentRequest", output = "http://endpoint.soap.faculty/ManagerEndpoint/createStudentResponse", fault = {
        @FaultAction(className = RegisterException_Exception.class, value = "http://endpoint.soap.faculty/ManagerEndpoint/createStudent/Fault/RegisterException")
    })
    public StudentDTO createStudent(
        @WebParam(name = "arg0", partName = "arg0")
        StudentDTO arg0)
        throws RegisterException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns faculty.soap.endpoint.StudentDTO
     * @throws NotFoundIdException_Exception
     * @throws NotFoundObjectException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://endpoint.soap.faculty/ManagerEndpoint/getStudentInfoRequest", output = "http://endpoint.soap.faculty/ManagerEndpoint/getStudentInfoResponse", fault = {
        @FaultAction(className = NotFoundObjectException_Exception.class, value = "http://endpoint.soap.faculty/ManagerEndpoint/getStudentInfo/Fault/NotFoundObjectException"),
        @FaultAction(className = NotFoundIdException_Exception.class, value = "http://endpoint.soap.faculty/ManagerEndpoint/getStudentInfo/Fault/NotFoundIdException")
    })
    public StudentDTO getStudentInfo(
        @WebParam(name = "arg0", partName = "arg0")
        int arg0)
        throws NotFoundIdException_Exception, NotFoundObjectException_Exception
    ;

}
